# GNU Make project makefile autogenerated by Premake
ifndef config
  config=debuguniv64
endif

ifndef verbose
  SILENT = @
endif

CC = gcc
CXX = g++
AR = ar

ifndef RESCOMP
  ifdef WINDRES
    RESCOMP = $(WINDRES)
  else
    RESCOMP = windres
  endif
endif

ifeq ($(config),debuguniv64)
  OBJDIR     = obj/Universal64/Debug
  TARGETDIR  = ../../../bin
  TARGET     = $(TARGETDIR)/orx-premake4-mix-c++d
  DEFINES   += -DPK_ENABLE_OS=0 -D__orxDEBUG__
  INCLUDES  += -I$(ORX)/include -I../../../include/extensions/imgui -I../../../include/extensions -I../../../include
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) -ffast-math -g -std=c11 -arch x86_64 -arch arm64 -gdwarf-2 -Wno-unused-function -Wno-write-strings
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -fno-exceptions -std=c++11
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -L$(ORX)/lib/dynamic -L. -arch x86_64 -arch arm64 -dead_strip
  LIBS      += -lorxd -framework Foundation -framework AppKit
  LDDEPS    +=
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running post-build commands
	cp -f $(ORX)/lib/dynamic/liborx*.dylib ../../../bin
  endef
endif

ifeq ($(config),profileuniv64)
  OBJDIR     = obj/Universal64/Profile
  TARGETDIR  = ../../../bin
  TARGET     = $(TARGETDIR)/orx-premake4-mix-c++p
  DEFINES   += -DPK_ENABLE_OS=0 -D__orxPROFILER__ -DNDEBUG
  INCLUDES  += -I$(ORX)/include -I../../../include/extensions/imgui -I../../../include/extensions -I../../../include
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) -ffast-math -g -std=c11 -O2 -arch x86_64 -arch arm64 -gdwarf-2 -Wno-unused-function -Wno-write-strings
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -fno-exceptions -std=c++11 -fno-rtti
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -L$(ORX)/lib/dynamic -L. -arch x86_64 -arch arm64 -dead_strip
  LIBS      += -lorxp -framework Foundation -framework AppKit
  LDDEPS    +=
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running post-build commands
	cp -f $(ORX)/lib/dynamic/liborx*.dylib ../../../bin
  endef
endif

ifeq ($(config),releaseuniv64)
  OBJDIR     = obj/Universal64/Release
  TARGETDIR  = ../../../bin
  TARGET     = $(TARGETDIR)/orx-premake4-mix-c++
  DEFINES   += -DPK_ENABLE_OS=0 -DNDEBUG
  INCLUDES  += -I$(ORX)/include -I../../../include/extensions/imgui -I../../../include/extensions -I../../../include
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) -ffast-math -g -std=c11 -O2 -arch x86_64 -arch arm64 -gdwarf-2 -Wno-unused-function -Wno-write-strings
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -fno-exceptions -std=c++11 -fno-rtti
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -L$(ORX)/lib/dynamic -L. -arch x86_64 -arch arm64 -dead_strip
  LIBS      += -lorx -framework Foundation -framework AppKit
  LDDEPS    +=
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running post-build commands
	cp -f $(ORX)/lib/dynamic/liborx*.dylib ../../../bin
  endef
endif

ifeq ($(config),bundleuniv64)
  OBJDIR     = obj/Universal64/Bundle
  TARGETDIR  = ../../../bin
  TARGET     = $(TARGETDIR)/orx-premake4-mix-c++
  DEFINES   += -DPK_ENABLE_OS=0
  INCLUDES  += -I$(ORX)/include -I../../../include/extensions/imgui -I../../../include/extensions -I../../../include
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) -ffast-math -g -std=c11 -O2 -arch x86_64 -arch arm64 -gdwarf-2 -Wno-unused-function -Wno-write-strings
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -fno-exceptions -std=c++11 -fno-rtti
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -L$(ORX)/lib/dynamic -L. -arch x86_64 -arch arm64 -dead_strip
  LIBS      += -lorx -framework Foundation -framework AppKit
  LDDEPS    +=
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running post-build commands
	cp -f $(ORX)/lib/dynamic/liborx*.dylib ../../../bin
  endef
endif

ifeq ($(config),debug64)
  OBJDIR     = obj/x64/Debug
  TARGETDIR  = ../../../bin
  TARGET     = $(TARGETDIR)/orx-premake4-mix-c++d
  DEFINES   += -DPK_ENABLE_OS=0 -D__orxDEBUG__
  INCLUDES  += -I$(ORX)/include -I../../../include/extensions/imgui -I../../../include/extensions -I../../../include
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) -ffast-math -g -std=c11 -m64 -gdwarf-2 -Wno-unused-function -Wno-write-strings
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -fno-exceptions -std=c++11
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -L$(ORX)/lib/dynamic -L. -m64 -L/usr/lib64 -dead_strip
  LIBS      += -lorxd -framework Foundation -framework AppKit
  LDDEPS    +=
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running post-build commands
	cp -f $(ORX)/lib/dynamic/liborx*.dylib ../../../bin
  endef
endif

ifeq ($(config),profile64)
  OBJDIR     = obj/x64/Profile
  TARGETDIR  = ../../../bin
  TARGET     = $(TARGETDIR)/orx-premake4-mix-c++p
  DEFINES   += -DPK_ENABLE_OS=0 -D__orxPROFILER__ -DNDEBUG
  INCLUDES  += -I$(ORX)/include -I../../../include/extensions/imgui -I../../../include/extensions -I../../../include
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) -ffast-math -g -std=c11 -O2 -m64 -gdwarf-2 -Wno-unused-function -Wno-write-strings
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -fno-exceptions -std=c++11 -fno-rtti
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -L$(ORX)/lib/dynamic -L. -m64 -L/usr/lib64 -dead_strip
  LIBS      += -lorxp -framework Foundation -framework AppKit
  LDDEPS    +=
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running post-build commands
	cp -f $(ORX)/lib/dynamic/liborx*.dylib ../../../bin
  endef
endif

ifeq ($(config),release64)
  OBJDIR     = obj/x64/Release
  TARGETDIR  = ../../../bin
  TARGET     = $(TARGETDIR)/orx-premake4-mix-c++
  DEFINES   += -DPK_ENABLE_OS=0 -DNDEBUG
  INCLUDES  += -I$(ORX)/include -I../../../include/extensions/imgui -I../../../include/extensions -I../../../include
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) -ffast-math -g -std=c11 -O2 -m64 -gdwarf-2 -Wno-unused-function -Wno-write-strings
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -fno-exceptions -std=c++11 -fno-rtti
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -L$(ORX)/lib/dynamic -L. -m64 -L/usr/lib64 -dead_strip
  LIBS      += -lorx -framework Foundation -framework AppKit
  LDDEPS    +=
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running post-build commands
	cp -f $(ORX)/lib/dynamic/liborx*.dylib ../../../bin
  endef
endif

ifeq ($(config),bundle64)
  OBJDIR     = obj/x64/Bundle
  TARGETDIR  = ../../../bin
  TARGET     = $(TARGETDIR)/orx-premake4-mix-c++
  DEFINES   += -DPK_ENABLE_OS=0
  INCLUDES  += -I$(ORX)/include -I../../../include/extensions/imgui -I../../../include/extensions -I../../../include
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) -ffast-math -g -std=c11 -O2 -m64 -gdwarf-2 -Wno-unused-function -Wno-write-strings
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -fno-exceptions -std=c++11 -fno-rtti
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -L$(ORX)/lib/dynamic -L. -m64 -L/usr/lib64 -dead_strip
  LIBS      += -lorx -framework Foundation -framework AppKit
  LDDEPS    +=
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running post-build commands
	cp -f $(ORX)/lib/dynamic/liborx*.dylib ../../../bin
  endef
endif

ifeq ($(config),debugweb)
  CC         = emcc
  CXX        = em++
  AR         = emar
  RESCOMP    = :
  OBJDIR     = obj/Web/Debug
  TARGETDIR  = ../../../bin/web
  TARGET     = $(TARGETDIR)/orx-premake4-mix-c++.js
  DEFINES   += -DPK_ENABLE_OS=0 -D__orxDEBUG__
  INCLUDES  += -I$(ORX)/include -I../../../include/extensions/imgui -I../../../include/extensions -I../../../include
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) -ffast-math -g -std=c11 -DorxWEB_EXECUTABLE_NAME='"orx-premake4-mix-c++.wasm"' --use-port=contrib.glfw3 -pthread
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -fno-exceptions -std=c++11
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -L$(ORX)/lib/static/web -L$(ORX)/../extern/libwebp/lib/web -L$(ORX)/../extern/LiquidFun-1.1.0/lib/web -L. --preload-file ../../../build/orx-premake4-mix-c++.obr@/ -sPTHREAD_POOL_SIZE=navigator.hardwareConcurrency -sAUDIO_WORKLET=1 -sWASM_WORKERS=1 -sSTACK_SIZE=1048576 -sASYNCIFY -sALLOW_MEMORY_GROWTH -sFULL_ES3=1 --use-port=contrib.glfw3 -pthread -lidbfs.js -gsource-map
  LIBS      += -lorxd -lwebpdecoder -lliquidfun
  LDDEPS    +=
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
	@echo Running pre-link commands
	cd ../../../bin && ./orx-premake4-mix-c++ -b ../build/orx-premake4-mix-c++.obr
  endef
  define POSTBUILDCMDS
	@echo Running post-build commands
	rm ../../../build/orx-premake4-mix-c++.obr
  endef
endif

ifeq ($(config),profileweb)
  CC         = emcc
  CXX        = em++
  AR         = emar
  RESCOMP    = :
  OBJDIR     = obj/Web/Profile
  TARGETDIR  = ../../../bin/web
  TARGET     = $(TARGETDIR)/orx-premake4-mix-c++.js
  DEFINES   += -DPK_ENABLE_OS=0 -D__orxPROFILER__ -DNDEBUG
  INCLUDES  += -I$(ORX)/include -I../../../include/extensions/imgui -I../../../include/extensions -I../../../include
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) -ffast-math -g -std=c11 -O2 -DorxWEB_EXECUTABLE_NAME='"orx-premake4-mix-c++.wasm"' --use-port=contrib.glfw3 -pthread
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -fno-exceptions -std=c++11 -fno-rtti
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -L$(ORX)/lib/static/web -L$(ORX)/../extern/libwebp/lib/web -L$(ORX)/../extern/LiquidFun-1.1.0/lib/web -L. --preload-file ../../../build/orx-premake4-mix-c++.obr@/ -sPTHREAD_POOL_SIZE=navigator.hardwareConcurrency -sAUDIO_WORKLET=1 -sWASM_WORKERS=1 -sSTACK_SIZE=1048576 -sASYNCIFY -sALLOW_MEMORY_GROWTH -sFULL_ES3=1 --use-port=contrib.glfw3 -pthread -lidbfs.js -O2
  LIBS      += -lorxp -lwebpdecoder -lliquidfun
  LDDEPS    +=
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
	@echo Running pre-link commands
	cd ../../../bin && ./orx-premake4-mix-c++ -b ../build/orx-premake4-mix-c++.obr
  endef
  define POSTBUILDCMDS
	@echo Running post-build commands
	rm ../../../build/orx-premake4-mix-c++.obr
  endef
endif

ifeq ($(config),releaseweb)
  CC         = emcc
  CXX        = em++
  AR         = emar
  RESCOMP    = :
  OBJDIR     = obj/Web/Release
  TARGETDIR  = ../../../bin/web
  TARGET     = $(TARGETDIR)/orx-premake4-mix-c++.js
  DEFINES   += -DPK_ENABLE_OS=0 -DNDEBUG
  INCLUDES  += -I$(ORX)/include -I../../../include/extensions/imgui -I../../../include/extensions -I../../../include
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) -ffast-math -g -std=c11 -O2 -DorxWEB_EXECUTABLE_NAME='"orx-premake4-mix-c++.wasm"' --use-port=contrib.glfw3 -pthread
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -fno-exceptions -std=c++11 -fno-rtti
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -L$(ORX)/lib/static/web -L$(ORX)/../extern/libwebp/lib/web -L$(ORX)/../extern/LiquidFun-1.1.0/lib/web -L. --preload-file ../../../build/orx-premake4-mix-c++.obr@/ -sPTHREAD_POOL_SIZE=navigator.hardwareConcurrency -sAUDIO_WORKLET=1 -sWASM_WORKERS=1 -sSTACK_SIZE=1048576 -sASYNCIFY -sALLOW_MEMORY_GROWTH -sFULL_ES3=1 --use-port=contrib.glfw3 -pthread -lidbfs.js -O2
  LIBS      += -lorx -lwebpdecoder -lliquidfun
  LDDEPS    +=
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
	@echo Running pre-link commands
	cd ../../../bin && ./orx-premake4-mix-c++ -b ../build/orx-premake4-mix-c++.obr
  endef
  define POSTBUILDCMDS
	@echo Running post-build commands
	rm ../../../build/orx-premake4-mix-c++.obr
  endef
endif

ifeq ($(config),bundleweb)
  CC         = emcc
  CXX        = em++
  AR         = emar
  RESCOMP    = :
  OBJDIR     = obj/Web/Bundle
  TARGETDIR  = ../../../bin/web
  TARGET     = $(TARGETDIR)/orx-premake4-mix-c++.js
  DEFINES   += -DPK_ENABLE_OS=0
  INCLUDES  += -I$(ORX)/include -I../../../include/extensions/imgui -I../../../include/extensions -I../../../include
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) -ffast-math -g -std=c11 -O2 -DorxWEB_EXECUTABLE_NAME='"orx-premake4-mix-c++.wasm"' --use-port=contrib.glfw3 -pthread
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -fno-exceptions -std=c++11 -fno-rtti
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -L$(ORX)/lib/static/web -L$(ORX)/../extern/libwebp/lib/web -L$(ORX)/../extern/LiquidFun-1.1.0/lib/web -L. --preload-file ../../../build/orx-premake4-mix-c++.obr@/ -sPTHREAD_POOL_SIZE=navigator.hardwareConcurrency -sAUDIO_WORKLET=1 -sWASM_WORKERS=1 -sSTACK_SIZE=1048576 -sASYNCIFY -sALLOW_MEMORY_GROWTH -sFULL_ES3=1 --use-port=contrib.glfw3 -pthread -lidbfs.js
  LIBS      += -lorx -lwebpdecoder -lliquidfun
  LDDEPS    +=
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
	@echo Running pre-link commands
	cd ../../../bin && ./orx-premake4-mix-c++ -b ../build/orx-premake4-mix-c++.obr
  endef
  define POSTBUILDCMDS
	@echo Running post-build commands
	rm ../../../build/orx-premake4-mix-c++.obr
  endef
endif

OBJECTS := \
	$(OBJDIR)/Object.o \
	$(OBJDIR)/orx-premake4-mix-c++.o \
	$(OBJDIR)/imgui_widgets.o \
	$(OBJDIR)/imgui.o \
	$(OBJDIR)/imgui_tables.o \
	$(OBJDIR)/imgui_demo.o \
	$(OBJDIR)/imgui_draw.o \
	$(OBJDIR)/pocketpy.o \

RESOURCES := \

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif

.PHONY: clean prebuild prelink

all: $(TARGETDIR) $(OBJDIR) $(TARGET)
	@:

$(TARGET): prebuild $(GCH) $(OBJECTS) $(LDDEPS) $(RESOURCES) prelink
	@echo Linking orx-premake4-mix-c++
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning orx-premake4-mix-c++
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
.NOTPARALLEL: $(GCH) $(PCH)
$(GCH): $(PCH)
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -MMD -MP $(DEFINES) $(INCLUDES) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
endif

$(OBJDIR)/Object.o: ../../../src/Object.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

$(OBJDIR)/orx-premake4-mix-c++.o: ../../../src/orx-premake4-mix-c++.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

$(OBJDIR)/imgui_widgets.o: ../../../src/imgui/imgui_widgets.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

$(OBJDIR)/imgui.o: ../../../src/imgui/imgui.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

$(OBJDIR)/imgui_tables.o: ../../../src/imgui/imgui_tables.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

$(OBJDIR)/imgui_demo.o: ../../../src/imgui/imgui_demo.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

$(OBJDIR)/imgui_draw.o: ../../../src/imgui/imgui_draw.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

$(OBJDIR)/pocketpy.o: ../../../src/pocketpy.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(OBJDIR)/$(notdir $(PCH)).d
endif
